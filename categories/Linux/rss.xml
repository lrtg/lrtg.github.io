<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Ehlxr's Blog</title><link>https://3w.vercel.app/categories/Linux/</link><description>Recent content in Linux on Ehlxr's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 24 May 2017 10:45:20 +0000</lastBuildDate><atom:link href="https://3w.vercel.app/categories/Linux/rss.xml" rel="self" type="application/rss+xml"/><item><title>占用端口、PID 查询总结</title><link>https://3w.vercel.app/2017/05/24/query-port-pid/</link><pubDate>Wed, 24 May 2017 10:45:20 +0000</pubDate><guid>https://3w.vercel.app/2017/05/24/query-port-pid/</guid><description>&lt;blockquote>
&lt;p>总结一下日常工作学习中常用的查询占用端口、PID相关命令。主要有命令 ps、lsof、netstat 等命令。&lt;/p>
&lt;/blockquote>
&lt;h2 id="ps">ps&lt;/h2>
&lt;p>&lt;code>ps -ef&lt;/code> 或者 &lt;code>ps aux&lt;/code>&lt;/p>
&lt;p>根据命令（IntelliJIDEALicenseServer）搜索 PID（17107）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ ps -ef | grep IntelliJIDEALicenseServer | grep -v &lt;span style="color:#4070a0">&amp;#34;grep&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#40a070">501&lt;/span> &lt;span style="color:#40a070">17017&lt;/span> &lt;span style="color:#40a070">12203&lt;/span> &lt;span style="color:#40a070">0&lt;/span> 10:01上午 ttys000 0:00.02 IntelliJIDEALicenseServer -p &lt;span style="color:#40a070">21014&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="lsof">lsof&lt;/h2>
&lt;p>根据 PID（17107）搜索占用端口（21014）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ lsof -p &lt;span style="color:#40a070">17017&lt;/span> -nP | grep TCP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>IntelliJI &lt;span style="color:#40a070">17017&lt;/span> ehlxr 3u IPv4 0xc0df10496212b0e3 0t0 TCP *:21014 &lt;span style="color:#666">(&lt;/span>LISTEN&lt;span style="color:#666">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># 或者使用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ lsof -nP -iTCP -sTCP:LISTEN | grep &lt;span style="color:#40a070">17017&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;ul>
&lt;li>-n 表示不显示主机名&lt;/li>
&lt;li>-P 表示不显示端口俗称&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>Linux 操作笔记</title><link>https://3w.vercel.app/2017/04/14/Linux-%E6%93%8D%E4%BD%9C%E7%AC%94%E8%AE%B0/</link><pubDate>Fri, 14 Apr 2017 11:18:41 +0000</pubDate><guid>https://3w.vercel.app/2017/04/14/Linux-%E6%93%8D%E4%BD%9C%E7%AC%94%E8%AE%B0/</guid><description>&lt;blockquote>
&lt;p>好记性不如烂笔头，记录一下日常工作学习中常使用的 Linux 命令。&lt;/p>
&lt;/blockquote>
&lt;h1 id="安装磁盘分配">安装磁盘分配&lt;/h1>
&lt;ul>
&lt;li>&lt;code>/boot&lt;/code> 用来存放与 Linux 系统启动有关的程序，比如启动引导装载程序等，建议大小为 100MB。&lt;/li>
&lt;li>&lt;code>swap&lt;/code> 实现虚拟内存，建议大小是物理内存的1~2倍。&lt;/li>
&lt;li>&lt;code>/&lt;/code> Linux系统的根目录，所有的目录都挂在这个目录下面，建议大小为5GB以上。&lt;/li>
&lt;li>&lt;code>/home&lt;/code> 存放普通用户的数据，是普通用户的宿主目录，建议大小为剩下的空间。&lt;/li>
&lt;/ul>
&lt;h1 id="系统目录结构">系统目录结构&lt;/h1>
&lt;ul>
&lt;li>&lt;code>/&lt;/code>：存放系统程序，也就是 At&amp;amp;t 开发的 Unix 程序。&lt;/li>
&lt;li>&lt;code>/usr&lt;/code>：存放 Unix 系统商（比如 IBM 和 HP）开发的程序。&lt;/li>
&lt;li>&lt;code>/usr/local&lt;/code>：存放用户自己安装的程序。&lt;/li>
&lt;li>&lt;code>/opt&lt;/code>：在某些系统，用于存放第三方厂商开发的程序，所以取名为 option，意为 &amp;ldquo;选装&amp;rdquo;。&lt;/li>
&lt;/ul></description></item><item><title>Linux 的 nohup 命令的用法</title><link>https://3w.vercel.app/2017/01/18/Linux-%E7%9A%84-nohup-%E5%91%BD%E4%BB%A4%E7%9A%84%E7%94%A8%E6%B3%95/</link><pubDate>Wed, 18 Jan 2017 16:13:21 +0000</pubDate><guid>https://3w.vercel.app/2017/01/18/Linux-%E7%9A%84-nohup-%E5%91%BD%E4%BB%A4%E7%9A%84%E7%94%A8%E6%B3%95/</guid><description>&lt;blockquote>
&lt;p>如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用 &lt;code>nohup&lt;/code> 命令。&lt;/p>
&lt;/blockquote>
&lt;h1 id="命令简介">命令简介&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ nohup Command &lt;span style="color:#666">[&lt;/span> Arg … &lt;span style="color:#666">]&lt;/span> &lt;span style="color:#666">[&lt;/span> &amp;amp; &lt;span style="color:#666">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。&lt;code>nohup&lt;/code> 就是不挂起的意思（&lt;code>no hang up&lt;/code>）。&lt;/p>
&lt;p>&lt;code>nohup&lt;/code> 运行由 &lt;code>Command&lt;/code> 和相关的 &lt;code>Arg&lt;/code> 参数指定的命令，忽略所有挂断（&lt;code>SIGHUP&lt;/code>）信号。要运行后台中的 &lt;code>nohup&lt;/code> 命令，添加 &lt;code>&amp;amp;&lt;/code> （ 表示 &lt;code>and&lt;/code> 的符号）到命令的尾部。&lt;/p>
&lt;p>如果使用 &lt;code>nohup&lt;/code> 命令提交作业，那么在缺省情况下该作业的所有输出都被重定向到一个名为 &lt;code>nohup.out&lt;/code> 的文件中，除非另外指定了输出文件。&lt;/p></description></item><item><title>Linux 中 fg、bg、jobs 等指令</title><link>https://3w.vercel.app/2017/01/18/Linux-%E4%B8%AD-fgbgjobs-%E7%AD%89%E6%8C%87%E4%BB%A4/</link><pubDate>Wed, 18 Jan 2017 15:30:16 +0000</pubDate><guid>https://3w.vercel.app/2017/01/18/Linux-%E4%B8%AD-fgbgjobs-%E7%AD%89%E6%8C%87%E4%BB%A4/</guid><description>&lt;blockquote>
&lt;p>记录总结一下 &lt;code>Linux&lt;/code> 中 &lt;code>fg&lt;/code>、&lt;code>bg&lt;/code>、&lt;code>jobs&lt;/code>、&lt;code>&amp;amp;&lt;/code>、&lt;code>ctrl + z&lt;/code> 等相关指令对任务进程的操作。&lt;/p>
&lt;/blockquote>
&lt;h1 id="一基本用法">一、基本用法&lt;/h1>
&lt;h2 id="11--和-jobs-指令">1.1 &lt;code>&amp;amp;&lt;/code> 和 &lt;code>jobs&lt;/code> 指令&lt;/h2>
&lt;p>&lt;code>&amp;amp;&lt;/code> 用在一个命令的最后，可以把这个命令转换为后台运行的任务进程。&lt;/p>
&lt;p>&lt;code>jobs&lt;/code> 查看当前终端有多少在后台运行的进程。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>jobs&lt;/code> 命令执行的结果，&lt;code>＋&lt;/code> 表示是一个当前的作业，&lt;code>-&lt;/code> 减号表示是一个当前作业之后的一个作业。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>jobs -l&lt;/code> 选项可显示所有任务的进程号 &lt;code>pid&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>jobs&lt;/code> 的状态可以是 &lt;code>running&lt;/code>，&lt;code>stopped&lt;/code>，&lt;code>terminated&lt;/code>。但是如果任务进程被终止了（&lt;code>kill&lt;/code>），当前的终端环境中也就删除了任务的进程标识；也就是说 &lt;strong>jobs 命令显示的是当前 shell 环境中后台正在运行或者被挂起的任务进程信息&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>[转] CentOS 升级 kernel</title><link>https://3w.vercel.app/2017/01/10/%E8%BD%AC-CentOS-%E5%8D%87%E7%BA%A7-kernel/</link><pubDate>Tue, 10 Jan 2017 11:01:09 +0000</pubDate><guid>https://3w.vercel.app/2017/01/10/%E8%BD%AC-CentOS-%E5%8D%87%E7%BA%A7-kernel/</guid><description>&lt;h1 id="一手动档">一、手动档&lt;/h1>
&lt;p>手动档就是从源码开始编译内核安装，好处是可以自己选择任意版本的内核，缺点就是耗时长，编译安装消耗系统资源&lt;/p>
&lt;h2 id="11获取-kernel-源码">1.1、获取 kernel 源码&lt;/h2>
&lt;p>这世界上最伟大的 Linux 内核源码下载地址是
&lt;a href="https://kernel.org/" title="kernel" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
kernel
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a> 官网，选择一个稳定版本下载即可&lt;/p>
&lt;h2 id="12解压并清理">1.2、解压并清理&lt;/h2>
&lt;p>官方要求将其解压到 &lt;code>/usr/src&lt;/code> 目录，其实在哪都可以，为了规范一点索性也解压到此位置，然后为了防止编译残留先做一次清理动作&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># 下载内核源码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ wget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.8.6.tar.xz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># 解压并移动到 /usr/src&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -Jxvf linux-4.8.6.tar.xz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ mv linux-4.8.6 /usr/src/kernels
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># 执行清理（没 gcc 的要装一下）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#007020">cd&lt;/span> /usr/src/kernels/linux-4.8.6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ make mrproper &lt;span style="color:#666">&amp;amp;&amp;amp;&lt;/span> make clean
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>CentOS 7 安装Python3、pip3</title><link>https://3w.vercel.app/2017/01/07/CentOS-7-%E5%AE%89%E8%A3%85Python3pip3/</link><pubDate>Sat, 07 Jan 2017 19:23:22 +0000</pubDate><guid>https://3w.vercel.app/2017/01/07/CentOS-7-%E5%AE%89%E8%A3%85Python3pip3/</guid><description>&lt;p>CentOS 7 默认安装了 Python 2，当需要使用 Python 3 的时候，可以手动下载 Python 源码后编译安装。&lt;/p>
&lt;h1 id="一安装-python-3">一、安装 Python 3&lt;/h1>
&lt;h2 id="11-安装准备">1.1 安装准备&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo mkdir /usr/local/python3 &lt;span style="color:#60a0b0;font-style:italic"># 创建安装目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># 下载 Python 源文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ wget --no-check-certificate https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># 注意：wget获取https的时候要加上：--no-check-certificate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -xzvf Python-3.6.0.tgz &lt;span style="color:#60a0b0;font-style:italic"># 解压缩包&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#007020">cd&lt;/span> Python-3.6.0 &lt;span style="color:#60a0b0;font-style:italic"># 进入解压目录&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[转] shell 中单引号、双引号、反引号、反斜杠区别</title><link>https://3w.vercel.app/2016/12/30/%E8%BD%AC-shell-%E4%B8%AD%E5%8D%95%E5%BC%95%E5%8F%B7%E5%8F%8C%E5%BC%95%E5%8F%B7%E5%8F%8D%E5%BC%95%E5%8F%B7%E5%8F%8D%E6%96%9C%E6%9D%A0%E5%8C%BA%E5%88%AB/</link><pubDate>Fri, 30 Dec 2016 15:36:51 +0000</pubDate><guid>https://3w.vercel.app/2016/12/30/%E8%BD%AC-shell-%E4%B8%AD%E5%8D%95%E5%BC%95%E5%8F%B7%E5%8F%8C%E5%BC%95%E5%8F%B7%E5%8F%8D%E5%BC%95%E5%8F%B7%E5%8F%8D%E6%96%9C%E6%9D%A0%E5%8C%BA%E5%88%AB/</guid><description>&lt;blockquote>
&lt;p>&lt;code>shell&lt;/code> 可以识别 &lt;code>4&lt;/code> 种不同类型的引字符号：单引号字符 &lt;code>'&lt;/code>，双引号字符 &lt;code>&amp;quot;&lt;/code>，反斜杠字符 &lt;code>\&lt;/code>，反引号字符 &lt;code>`&lt;/code> ，学习 &lt;code>shell&lt;/code> 编程的朋友可以看下。&lt;/p>
&lt;/blockquote>
&lt;h1 id="1-单引号--">1. 单引号( &lt;code>'&lt;/code> )&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ grep Susan phonebook
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Susan Goldberg 403-212-4921
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Susan Topple 212-234-2343
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果我们想查找的是 &lt;code>Susan Goldberg&lt;/code>，不能直接使用 &lt;code>grep Susan Goldberg phonebook&lt;/code> 命令，&lt;code>grep&lt;/code> 会把 &lt;code>Goldberg&lt;/code> 和 &lt;code>phonebook&lt;/code> 当作需要搜索的文件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ grep &lt;span style="color:#4070a0">&amp;#39;Susan Gold&amp;#39;&lt;/span> phonebook
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Susan Goldberg 403-212-4921
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当 &lt;code>shell&lt;/code> 碰到第一个单引号时，它忽略掉其后直到右引号的所有特殊字符。&lt;/p></description></item><item><title>CentOS 安装 Nginx</title><link>https://3w.vercel.app/2016/12/23/CentOS-%E5%AE%89%E8%A3%85-Nginx/</link><pubDate>Fri, 23 Dec 2016 11:20:44 +0000</pubDate><guid>https://3w.vercel.app/2016/12/23/CentOS-%E5%AE%89%E8%A3%85-Nginx/</guid><description>&lt;h1 id="一安装准备">一、安装准备&lt;/h1>
&lt;p>首先由于 Nginx 的一些模块依赖一些 lib 库，所以在安装 Nginx 之前，必须先安装这些 lib 库，这些依赖库主要有 g++、gcc、openssl-devel、pcre-devel 和 zlib-devel，执行如下命令安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ yum install gcc-c++
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ yum install pcre pcre-devel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ yum install zlib zlib-devel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ yum install openssl openssl--devel
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="二安装-nginx">二、安装 Nginx&lt;/h1>
&lt;p>安装之前，最好检查一下是否已经安装有 Nginx&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ find -name nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>CentOS 安装 rar、zip 解压缩</title><link>https://3w.vercel.app/2016/12/22/CentOS-%E5%AE%89%E8%A3%85-rarzip-%E8%A7%A3%E5%8E%8B%E7%BC%A9/</link><pubDate>Thu, 22 Dec 2016 15:39:45 +0000</pubDate><guid>https://3w.vercel.app/2016/12/22/CentOS-%E5%AE%89%E8%A3%85-rarzip-%E8%A7%A3%E5%8E%8B%E7%BC%A9/</guid><description>&lt;p>Windows 系统压缩的 rar 和 zip 文件，在 Linux 系统下是无法通过 tar 命令解压缩的，需要使用 rar 和 zip 命令来解压缩。下面记录一下 rar 和 zip 安装和简单的使用。&lt;/p>
&lt;h1 id="一rar-安装使用">一、rar 安装使用&lt;/h1>
&lt;p>Linux 系统下使用 rarlinux 解压缩 rar 压缩文件，下载页面：http://www.rarsoft.com/download.htm。&lt;/p>
&lt;h2 id="11-下载系统对应的版本">1.1 下载系统对应的版本&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ wget http://www.rarsoft.com/rar/rarlinux-x64-5.4.0.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="12-解压安装">1.2 解压、安装&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ tar -zxvf rarlinux-x64-5.4.0.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#007020">cd&lt;/span> rar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ make
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[转] Linux 查看系统内核版本和发行版本</title><link>https://3w.vercel.app/2016/11/18/%E8%BD%AC-Linux-%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E5%86%85%E6%A0%B8%E7%89%88%E6%9C%AC%E5%92%8C%E5%8F%91%E8%A1%8C%E7%89%88%E6%9C%AC/</link><pubDate>Fri, 18 Nov 2016 14:56:43 +0000</pubDate><guid>https://3w.vercel.app/2016/11/18/%E8%BD%AC-Linux-%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E5%86%85%E6%A0%B8%E7%89%88%E6%9C%AC%E5%92%8C%E5%8F%91%E8%A1%8C%E7%89%88%E6%9C%AC/</guid><description>&lt;h1 id="一查看-linux-内核版本命令">一、查看 Linux 内核版本命令&lt;/h1>
&lt;p>以下两条命令适合所有 &lt;code>Linux&lt;/code> 系统。&lt;/p>
&lt;h2 id="1cat-procversion">1、cat /proc/version&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ cat /proc/version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Linux version 3.10.0-327.el7.x86_64 &lt;span style="color:#666">(&lt;/span>builder@kbuilder.dev.centos.org&lt;span style="color:#666">)&lt;/span> &lt;span style="color:#666">(&lt;/span>gcc version 4.8.3 &lt;span style="color:#40a070">20140911&lt;/span> &lt;span style="color:#666">(&lt;/span>Red Hat 4.8.3-9&lt;span style="color:#666">)&lt;/span> &lt;span style="color:#666">(&lt;/span>GCC&lt;span style="color:#666">)&lt;/span> &lt;span style="color:#666">)&lt;/span> &lt;span style="color:#60a0b0;font-style:italic">#1 SMP Thu Nov 19 22:10:57 UTC 2015&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>➜ ~ cat /proc/version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Linux version 4.4.0-36-generic &lt;span style="color:#666">(&lt;/span>buildd@lcy01-01&lt;span style="color:#666">)&lt;/span> &lt;span style="color:#666">(&lt;/span>gcc version 5.4.0 &lt;span style="color:#40a070">20160609&lt;/span> &lt;span style="color:#666">(&lt;/span>Ubuntu 5.4.0-6ubuntu1~16.04.2&lt;span style="color:#666">)&lt;/span> &lt;span style="color:#666">)&lt;/span> &lt;span style="color:#60a0b0;font-style:italic">#55-Ubuntu SMP Thu Aug 11 18:01:55 UTC 2016&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2uname--a">2、uname -a&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ uname -a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Linux centos 3.10.0-327.el7.x86_64 &lt;span style="color:#60a0b0;font-style:italic">#1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>➜ ~ uname -a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Linux www 4.4.0-36-generic &lt;span style="color:#60a0b0;font-style:italic">#55-Ubuntu SMP Thu Aug 11 18:01:55 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Oh My Zsh 替换你的 Bash Shell</title><link>https://3w.vercel.app/2016/09/24/using-oh-my-zsh/</link><pubDate>Sat, 24 Sep 2016 12:31:21 +0000</pubDate><guid>https://3w.vercel.app/2016/09/24/using-oh-my-zsh/</guid><description>&lt;blockquote>
&lt;p>Oh-My-Zsh is an open source, community-driven framework for managing your ZSH configuration. It comes bundled with a ton of helpful functions, helpers, plugins, themes, and a few things that make you shout&amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;p>
&lt;a href="http://ohmyz.sh/" title="Oh My ZSH!" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
Oh My ZSH!
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://3w.vercel.app/imgs/img-lazy-loading.gif" data-src="https://cdn.jsdelivr.net/gh/0vo/oss/images/OMZLogo_BnW.png" alt="Oh My Zsh" />&lt;/p>
&lt;!-- {% img https://cdn.jsdelivr.net/gh/0vo/oss/images/OMZLogo_BnW.png 200 'Oh My Zsh'%} -->
&lt;h1 id="1-oh-my-zsh-简介">1. Oh My Zsh 简介&lt;/h1>
&lt;p>无意中看见了 Linux 的一款 Shell，相比于 Bash 极其美艳，决定入坑试水一下，不试不知道，一试绝对有惊喜，不仅外观美艳而且功能强大，那还有不替换 Bash 的理由吗？搞起搞起&amp;hellip;&amp;hellip;&lt;/p></description></item><item><title>CentOS 7 安装最新的 Git</title><link>https://3w.vercel.app/2016/07/30/CentOS-7-%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%9A%84-Git/</link><pubDate>Sat, 30 Jul 2016 22:12:43 +0000</pubDate><guid>https://3w.vercel.app/2016/07/30/CentOS-7-%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%9A%84-Git/</guid><description>&lt;blockquote>
&lt;p>yum 源仓库里的 Git 版本更新不及时，最新版本的 Git 是 1.8.3.1，但是官方最新版本已经到了 2.9.2。想要安装最新版本的的 Git，只能下载源码进行安装。&lt;/p>
&lt;/blockquote>
&lt;h1 id="1-查看-yum-源仓库的-git-信息">1. 查看 yum 源仓库的 Git 信息：&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># yum info git&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://3w.vercel.app/imgs/img-lazy-loading.gif" data-src="https://cdn.jsdelivr.net/gh/0vo/oss/images/20160730222608.png" alt="" />&lt;/p>
&lt;p>可以看出，截至目前，yum 源仓库中最新的 Git 版本才 1.8.3.1，而查看最
&lt;a href="https://github.com/git/git/releases" title="新的 Git 发布版本" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
新的 Git 发布版本
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>，已经 2.9.2 了。&lt;/p></description></item><item><title>CentOS 7 安装 Node.js</title><link>https://3w.vercel.app/2016/07/30/CentOS-7-%E5%AE%89%E8%A3%85-Node.js/</link><pubDate>Sat, 30 Jul 2016 16:19:03 +0000</pubDate><guid>https://3w.vercel.app/2016/07/30/CentOS-7-%E5%AE%89%E8%A3%85-Node.js/</guid><description>&lt;blockquote>
&lt;p>
&lt;a href="https://nodejs.org/en/" title="Node.js® is a JavaScript runtime built on Chrome&amp;amp;rsquo;s V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js&amp;amp;rsquo; package ecosystem, npm, is the largest ecosystem of open source libraries in the world." rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
Node.js® is a JavaScript runtime built on Chrome&amp;rsquo;s V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js&amp;rsquo; package ecosystem, npm, is the largest ecosystem of open source libraries in the world.
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="1-下载源码安装文件">1. 下载源码安装文件&lt;/h1>
&lt;h2 id="11-在线安装">1.1 在线安装&lt;/h2>
&lt;p>通过以下命令下载源文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget https://nodejs.org/dist/v4.4.7/node-v4.4.7.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[转]将 Centos 的 yum 源更改为国内的阿里云源</title><link>https://3w.vercel.app/2016/07/30/%E8%BD%AC%E5%B0%86-Centos-%E7%9A%84-yum-%E6%BA%90%E6%9B%B4%E6%94%B9%E4%B8%BA%E5%9B%BD%E5%86%85%E7%9A%84%E9%98%BF%E9%87%8C%E4%BA%91%E6%BA%90/</link><pubDate>Sat, 30 Jul 2016 11:57:59 +0000</pubDate><guid>https://3w.vercel.app/2016/07/30/%E8%BD%AC%E5%B0%86-Centos-%E7%9A%84-yum-%E6%BA%90%E6%9B%B4%E6%94%B9%E4%B8%BA%E5%9B%BD%E5%86%85%E7%9A%84%E9%98%BF%E9%87%8C%E4%BA%91%E6%BA%90/</guid><description>&lt;p>阿里云Linux安装镜像源地址：http://mirrors.aliyun.com/&lt;/p>
&lt;p>CentOS系统更换软件安装源&lt;/p>
&lt;h3 id="一备份你的原镜像文件以免出错后可以恢复">一、备份你的原镜像文件，以免出错后可以恢复。&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>