<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Ehlxr's Blog</title><link>https://3w.vercel.app/categories/Java/</link><description>Recent content in Java on Ehlxr's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 06 Dec 2020 22:48:28 +0800</lastBuildDate><atom:link href="https://3w.vercel.app/categories/Java/rss.xml" rel="self" type="application/rss+xml"/><item><title>使用 Lambda 优雅的处理 Java 异常</title><link>https://3w.vercel.app/2020/12/06/replace-java-try-catch-with-lambda/</link><pubDate>Sun, 06 Dec 2020 22:48:28 +0800</pubDate><guid>https://3w.vercel.app/2020/12/06/replace-java-try-catch-with-lambda/</guid><description>&lt;p>使用过 &lt;code>Java&lt;/code> 的函数接口，就会被简介的语法深深的吸引，苦于代码中大量的 &lt;code>try...catch&lt;/code> 繁琐代码，最近借鉴 &lt;code>java.util.Optional&lt;/code> 的实现写了个简化的小工具。&lt;/p>
&lt;p>以 &lt;code>Long.valueOf()&lt;/code> 为例，假如需要把一个字符串转换为&lt;code>long&lt;/code>，如果转换失败则设置默认值为 &lt;code>-1&lt;/code>，一般会作如下处理：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>String param &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#4070a0">&amp;#34;10s&amp;#34;&lt;/span>&lt;span style="color:#666">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#902000">long&lt;/span> result&lt;span style="color:#666">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">try&lt;/span> &lt;span style="color:#666">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#666">=&lt;/span> Long&lt;span style="color:#666">.&lt;/span>&lt;span style="color:#4070a0">parseLong&lt;/span>&lt;span style="color:#666">(&lt;/span>param&lt;span style="color:#666">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">}&lt;/span> &lt;span style="color:#007020;font-weight:bold">catch&lt;/span> &lt;span style="color:#666">(&lt;/span>Exception e&lt;span style="color:#666">)&lt;/span> &lt;span style="color:#666">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">// 捕获异常处理
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#666">-&lt;/span>1L&lt;span style="color:#666">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#666">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果使用简化工具：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>Long result &lt;span style="color:#666">=&lt;/span> Try&lt;span style="color:#666">.&lt;/span>&lt;span style="color:#4070a0">of&lt;/span>&lt;span style="color:#666">(()&lt;/span> &lt;span style="color:#666">-&amp;gt;&lt;/span> Long&lt;span style="color:#666">.&lt;/span>&lt;span style="color:#4070a0">valueOf&lt;/span>&lt;span style="color:#666">(&lt;/span>param&lt;span style="color:#666">)).&lt;/span>&lt;span style="color:#4070a0">trap&lt;/span>&lt;span style="color:#666">(&lt;/span>e &lt;span style="color:#666">-&amp;gt;&lt;/span> &lt;span style="color:#666">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">// 自行异常处理
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">&lt;/span>&lt;span style="color:#666">}).&lt;/span>&lt;span style="color:#4070a0">get&lt;/span>&lt;span style="color:#666">(-&lt;/span>1L&lt;span style="color:#666">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>Long result &lt;span style="color:#666">=&lt;/span> Try&lt;span style="color:#666">.&amp;lt;&lt;/span>String&lt;span style="color:#666">,&lt;/span> Long&lt;span style="color:#666">&amp;gt;&lt;/span>of&lt;span style="color:#666">(&lt;/span>Long&lt;span style="color:#666">::&lt;/span>valueOf&lt;span style="color:#666">).&lt;/span>&lt;span style="color:#4070a0">trap&lt;/span>&lt;span style="color:#666">(&lt;/span>Throwable&lt;span style="color:#666">::&lt;/span>printStackTrace&lt;span style="color:#666">).&lt;/span>&lt;span style="color:#4070a0">apply&lt;/span>&lt;span style="color:#666">(&lt;/span>param&lt;span style="color:#666">).&lt;/span>&lt;span style="color:#4070a0">get&lt;/span>&lt;span style="color:#666">(-&lt;/span>1L&lt;span style="color:#666">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果不需要异常处理：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>Long result &lt;span style="color:#666">=&lt;/span> Try&lt;span style="color:#666">.&lt;/span>&lt;span style="color:#4070a0">of&lt;/span>&lt;span style="color:#666">(()&lt;/span> &lt;span style="color:#666">-&amp;gt;&lt;/span> Long&lt;span style="color:#666">.&lt;/span>&lt;span style="color:#4070a0">valueOf&lt;/span>&lt;span style="color:#666">(&lt;/span>param&lt;span style="color:#666">)).&lt;/span>&lt;span style="color:#4070a0">get&lt;/span>&lt;span style="color:#666">(-&lt;/span>1L&lt;span style="color:#666">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">// Long result = Try.&amp;lt;String, Long&amp;gt;of(Long::valueOf).apply(param).get(-1L);
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果处理没有返回值的代码，如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>ArrayList&lt;span style="color:#666">&amp;lt;&lt;/span>String&lt;span style="color:#666">&amp;gt;&lt;/span> list &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">new&lt;/span> ArrayList&lt;span style="color:#666">&amp;lt;&amp;gt;();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Try&lt;span style="color:#666">.&amp;lt;&lt;/span>String&lt;span style="color:#666">&amp;gt;&lt;/span>of&lt;span style="color:#666">(&lt;/span>v &lt;span style="color:#666">-&amp;gt;&lt;/span> list&lt;span style="color:#666">.&lt;/span>&lt;span style="color:#4070a0">add&lt;/span>&lt;span style="color:#666">(&lt;/span>10&lt;span style="color:#666">,&lt;/span> v&lt;span style="color:#666">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">.&lt;/span>&lt;span style="color:#4070a0">trap&lt;/span>&lt;span style="color:#666">(&lt;/span>e &lt;span style="color:#666">-&amp;gt;&lt;/span> System&lt;span style="color:#666">.&lt;/span>&lt;span style="color:#4070a0">out&lt;/span>&lt;span style="color:#666">.&lt;/span>&lt;span style="color:#4070a0">println&lt;/span>&lt;span style="color:#666">(&lt;/span>e&lt;span style="color:#666">.&lt;/span>&lt;span style="color:#4070a0">getMessage&lt;/span>&lt;span style="color:#666">()))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">.&lt;/span>&lt;span style="color:#4070a0">accept&lt;/span>&lt;span style="color:#666">(&lt;/span>&lt;span style="color:#4070a0">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#666">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>HTTPS 笔记</title><link>https://3w.vercel.app/2020/03/11/https-note/</link><pubDate>Wed, 11 Mar 2020 17:57:16 +0800</pubDate><guid>https://3w.vercel.app/2020/03/11/https-note/</guid><description>随着互联网的迅速发展，网络安全问题日益凸显，现在 Chrome 浏览器已经开始阻止非 https 网站的访问了。对于 https 的流程一直不是十分清晰，借着还没有完全复工有时间</description></item><item><title>Maven 配置文件 settings.xml 详解</title><link>https://3w.vercel.app/2020/03/02/maven-setting-config/</link><pubDate>Mon, 02 Mar 2020 14:50:48 +0800</pubDate><guid>https://3w.vercel.app/2020/03/02/maven-setting-config/</guid><description>settings.xml 是 maven 的配置文件，用户配置文件存放于 ${user.home}/.m2/ 目录下，系统全局配置文件放置于 ${maven.home}/conf/ 目录下，pom.xml 是 maven 的项目的配置文件。 配置文件的优先级从高到低为</description></item><item><title>[转]理解 Java 动态代理</title><link>https://3w.vercel.app/2020/01/02/java-dynamic-proxy/</link><pubDate>Thu, 02 Jan 2020 15:28:26 +0800</pubDate><guid>https://3w.vercel.app/2020/01/02/java-dynamic-proxy/</guid><description>原文地址 动态代理是 Java 语言中非常经典的一种设计模式，也是所有设计模式中最难理解的一种。本文将通过一个简单的例子模拟 JDK 动态代理实现，让你彻底明白</description></item></channel></rss>