<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hexo on Ehlxr's Blog</title><link>https://3w.vercel.app/tags/Hexo/</link><description>Recent content in Hexo on Ehlxr's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 30 Aug 2016 14:23:52 +0000</lastBuildDate><atom:link href="https://3w.vercel.app/tags/Hexo/rss.xml" rel="self" type="application/rss+xml"/><item><title>使用Hexo基于GitHub Pages搭建个人博客（三）</title><link>https://3w.vercel.app/2016/08/30/%E4%BD%BF%E7%94%A8Hexo%E5%9F%BA%E4%BA%8EGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B8%89/</link><pubDate>Tue, 30 Aug 2016 14:23:52 +0000</pubDate><guid>https://3w.vercel.app/2016/08/30/%E4%BD%BF%E7%94%A8Hexo%E5%9F%BA%E4%BA%8EGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B8%89/</guid><description>&lt;blockquote>
&lt;p>生命不息，折腾不休。从搭建 blog 以来，博文虽没有写几篇，但折腾的时间花了不少，走过了不少弯路，也踩过了不少的坑，虽然很懒，但本着好记性不如烂笔头的宗旨，打算在折腾记忆尚未磨灭之际记录一下走过的路和踩过的坑&amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;p>接着前两篇使用 Hexo 基于 GitHub Pages 搭建个人博客之上，本文记录了在使用非常漂亮简洁的
&lt;a href="http://theme-next.iissnan.com/" title="Next" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
Next
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a> 主题过程中的各种折腾，其它主题的相关设置大同小异。再次衷心的感谢 Hexo 的作者和 Next 主题作者的无私奉献。&lt;/p>
&lt;h1 id="一主题基本配置">一、主题基本配置&lt;/h1>
&lt;p>记录一下 Next 主题的基本配置、设置「阅读全文」、关闭新建页面的评论功能、页面文章的篇数、宽度调节、设置「JavaScript 第三方库」等内容、在线字体替换（选择关闭，加快访问速度）&lt;/p></description></item><item><title>使用Hexo基于GitHub Pages搭建个人博客（二）</title><link>https://3w.vercel.app/2016/07/23/%E4%BD%BF%E7%94%A8Hexo%E5%9F%BA%E4%BA%8EGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%BA%8C/</link><pubDate>Sat, 23 Jul 2016 15:57:49 +0000</pubDate><guid>https://3w.vercel.app/2016/07/23/%E4%BD%BF%E7%94%A8Hexo%E5%9F%BA%E4%BA%8EGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%BA%8C/</guid><description>&lt;p>上一篇介绍了 GitHub Pages 服务开启，这篇文章将介绍 Hexo 的安装和使用以及将博客部署到 GitHub Pages 的操作。&lt;/p>
&lt;p>
&lt;a href="https://hexo.io/zh-cn/docs/" title="Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/p>
&lt;h1 id="一nodejs-安装">一、Node.js 安装&lt;/h1>
&lt;p>Hexo 是基于 Node.js 安装，所以安装 Hexo 之前首先要安装 Node.js。下载地址：https://nodejs.org/en/download/ 根据自己的操作系统，下载对应版本即可。Windons 安装过程比较简单，一直下一步即可安装完成。&lt;/p>
&lt;p>
&lt;a href="http://ehlxr.me/2016/07/30/CentOS-7-%E5%AE%89%E8%A3%85-Node-js/" title="CentOS 7 安装 Node.js" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
CentOS 7 安装 Node.js
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/p></description></item><item><title>使用Hexo基于GitHub Pages搭建个人博客（一）</title><link>https://3w.vercel.app/2016/07/23/%E4%BD%BF%E7%94%A8Hexo%E5%9F%BA%E4%BA%8EGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B8%80/</link><pubDate>Sat, 23 Jul 2016 11:35:43 +0000</pubDate><guid>https://3w.vercel.app/2016/07/23/%E4%BD%BF%E7%94%A8Hexo%E5%9F%BA%E4%BA%8EGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B8%80/</guid><description>&lt;blockquote>
&lt;p>&lt;code>GitHub Pages&lt;/code> 是 &lt;code>GitHub&lt;/code> 提供的免费开源的静态站点托管服务，利用这个服务可以搭建轻量级的博客系统，本文介绍了如何使用 &lt;code>Hexo&lt;/code> 结合 &lt;code>GitHub Pages&lt;/code> 服务搭建个人博客。&lt;/p>
&lt;/blockquote>
&lt;h1 id="一安装配置-git">一、安装配置 &lt;code>Git&lt;/code>&lt;/h1>
&lt;h2 id="11-安装-git">1.1 安装 &lt;code>Git&lt;/code>&lt;/h2>
&lt;p>使用 &lt;code>GitHub&lt;/code> 首先要安装 &lt;code>Git&lt;/code>，可根据操作系统下载不同版本的 &lt;code>Git&lt;/code>，&lt;code>Windows&lt;/code> 下载地址：https://git-scm.com/download/win 安装过程比较简单，选择默认选项配置即可下一步，不再叙述。&lt;/p>
&lt;h2 id="12-配置-git">1.2 配置 &lt;code>Git&lt;/code>&lt;/h2>
&lt;p>设置本地机器默认 &lt;code>commit&lt;/code> 的昵称与 &lt;code>Email&lt;/code>，姓名与 &lt;code>Email&lt;/code> 只用于日志标识，实际推送到远程仓库时，要用有操作权限的账号登录。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git config --global user.name &lt;span style="color:#4070a0">&amp;#34;ehlxr&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global user.email &lt;span style="color:#4070a0">&amp;#34;ehlxr@qq.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="二生成-ssh-keys">二、生成 &lt;code>SSH keys&lt;/code>&lt;/h1>
&lt;p>&lt;code>SSH Keys&lt;/code> 是 &lt;code>GitHub&lt;/code> 推荐的公钥、秘钥形式验证用户合法性的机制，添加 &lt;code>SSH Keys&lt;/code> 可以省去每次都要输入密码的步骤，下面将演示如何在本地计算机生成 &lt;code>SSH Keys&lt;/code> 的公钥、秘钥。&lt;/p></description></item></channel></rss>