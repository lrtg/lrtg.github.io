<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数据库事务 on Ehlxr's Blog</title><link>https://3w.vercel.app/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1/</link><description>Recent content in 数据库事务 on Ehlxr's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 31 May 2018 13:55:26 +0000</lastBuildDate><atom:link href="https://3w.vercel.app/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1/rss.xml" rel="self" type="application/rss+xml"/><item><title>SQL 事务隔离</title><link>https://3w.vercel.app/2018/05/31/sql-transaction-isolation/</link><pubDate>Thu, 31 May 2018 13:55:26 +0000</pubDate><guid>https://3w.vercel.app/2018/05/31/sql-transaction-isolation/</guid><description>&lt;p>SQL 标准定义了 4 类隔离级别，包括了一些具体规则，用来限定事务内外的哪些改变是可见的，哪些是不可见的。低级别的隔离级一般支持更高的并发处理，并拥有更低的系统开销。&lt;/p>
&lt;h2 id="一sql-事务隔离级别说明">一、SQL 事务隔离级别说明&lt;/h2>
&lt;h3 id="11-read-uncommitted读取未提交内容">1.1 Read Uncommitted（读取未提交内容）&lt;/h3>
&lt;p>在该隔离级别，所有事务都可以看到其他未提交事务的执行结果。本隔离级别很少用于实际应用，因为它的性能也不比其他级别好多少。读取未提交的数据，也被称之为脏读（Dirty Read）。&lt;/p></description></item></channel></rss>